INFO - tinypaper - Running command 'main'
INFO - tinypaper - Started run with ID "1"
INFO - main - playing only games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]
  0%|          | 0/13 [00:00<?, ?it/s]/home/fdamken/Development/study/tinypaper/src/model/model.py:19: UserWarning: Running model NOT in dry mode! This will consume API tokens and may cost money. MAKE SURE TO RUN IN DRY MODE FIRST TO GET AN ESTIMATE!
  warnings.warn(f"Running model NOT in dry mode! This will consume API tokens and may cost money. MAKE SURE TO RUN IN DRY MODE FIRST TO GET AN ESTIMATE!")
WARNING - _fetch - unexpected response: response:
GenerateContentResponse(
    done=True,
    iterator=None,
    result=glm.GenerateContentResponse({'candidates': [{'finish_reason': 2, 'index': 0, 'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 1, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'token_count': 0, 'grounding_attributions': []}], 'prompt_feedback': {'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 2, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'block_reason': 0}}),
)
WARNING - root - Finished call to 'agent.Agent.play' after 1.691(s), this was the 1st time calling it.
INFO - root - Retrying agent.Agent.play in 0.0 seconds as it raised UnexpectedAnswerException: .
WARNING - _fetch - unexpected response: response:
GenerateContentResponse(
    done=True,
    iterator=None,
    result=glm.GenerateContentResponse({'candidates': [{'finish_reason': 2, 'index': 0, 'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 1, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'token_count': 0, 'grounding_attributions': []}], 'prompt_feedback': {'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 2, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'block_reason': 0}}),
)
WARNING - root - Finished call to 'agent.Agent.play' after 3.062(s), this was the 2nd time calling it.
INFO - root - Retrying agent.Agent.play in 0.0 seconds as it raised UnexpectedAnswerException: .
  8%|▊         | 1/13 [00:22<04:24, 22.01s/it]WARNING - _fetch - unexpected response: response:
GenerateContentResponse(
    done=True,
    iterator=None,
    result=glm.GenerateContentResponse({'candidates': [{'finish_reason': 2, 'index': 0, 'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 1, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'token_count': 0, 'grounding_attributions': []}], 'prompt_feedback': {'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 2, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'block_reason': 0}}),
)
WARNING - root - Finished call to 'agent.Agent.play' after 1.653(s), this was the 1st time calling it.
INFO - root - Retrying agent.Agent.play in 0.0 seconds as it raised UnexpectedAnswerException: .
 15%|█▌        | 2/13 [00:42<03:50, 20.99s/it] 23%|██▎       | 3/13 [01:00<03:15, 19.52s/it] 31%|███       | 4/13 [01:17<02:47, 18.61s/it] 38%|███▊      | 5/13 [01:39<02:38, 19.79s/it] 46%|████▌     | 6/13 [01:57<02:15, 19.29s/it] 54%|█████▍    | 7/13 [02:15<01:52, 18.83s/it] 62%|██████▏   | 8/13 [02:33<01:32, 18.47s/it] 69%|██████▉   | 9/13 [02:50<01:12, 18.19s/it] 77%|███████▋  | 10/13 [03:08<00:54, 18.12s/it]WARNING - _fetch - unexpected response: response:
GenerateContentResponse(
    done=True,
    iterator=None,
    result=glm.GenerateContentResponse({'candidates': [{'finish_reason': 2, 'index': 0, 'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 1, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'token_count': 0, 'grounding_attributions': []}], 'prompt_feedback': {'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 2, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'block_reason': 0}}),
)
WARNING - root - Finished call to 'agent.Agent.play' after 1.560(s), this was the 1st time calling it.
INFO - root - Retrying agent.Agent.play in 0.0 seconds as it raised UnexpectedAnswerException: .
 85%|████████▍ | 11/13 [03:28<00:37, 18.61s/it]WARNING - _fetch - unexpected response: response:
GenerateContentResponse(
    done=True,
    iterator=None,
    result=glm.GenerateContentResponse({'candidates': [{'finish_reason': 2, 'index': 0, 'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 1, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'token_count': 0, 'grounding_attributions': []}], 'prompt_feedback': {'safety_ratings': [{'category': 9, 'probability': 1, 'blocked': False}, {'category': 8, 'probability': 1, 'blocked': False}, {'category': 7, 'probability': 2, 'blocked': False}, {'category': 10, 'probability': 1, 'blocked': False}], 'block_reason': 0}}),
)
WARNING - root - Finished call to 'agent.Agent.play' after 1.410(s), this was the 1st time calling it.
INFO - root - Retrying agent.Agent.play in 0.0 seconds as it raised UnexpectedAnswerException: .
 92%|█████████▏| 12/13 [03:48<00:19, 19.24s/it]100%|██████████| 13/13 [04:07<00:00, 19.02s/it]100%|██████████| 13/13 [04:07<00:00, 19.04s/it]
INFO - tinypaper - Result: {'answers': ['skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '2', '2', '1', '1', '2', '2', '2', '1', '2', '2', '2', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '1', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['2', '2', '2', '2', '2', '1', '2', '1', '2', '2', '2', '1', '1'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['2', '2', '1', '2', '2', '1', '1', '2', '1', '2', '2', '2', '1'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '2', '1', '1', '2', '2', '1', '2', '1', '2', '2', '2', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '2', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['2', '2', '2', '2', '1', '2', '1', '1', '2', '1', '2', '1', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '2', '1', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', ['1', '2', '1', '1', '2', '1', '2', '1', '2', '2', '1', '1', '1'], ['2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '2', '2'], 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]', 'skipped; only playing games [4, 19, 25, 30, 35, 56, 60, 62, 79, 83, 85, 92, 93]'], 'api_usage': [APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-1, num_output_tokens=-1, cost=0.0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0), APIUsage(name='gemini-1.0-pro-001', num_input_tokens=0, num_output_tokens=0, cost=0)], 'api_usage_total': APIUsage(name='gemini-1.0-pro-001', num_input_tokens=-13, num_output_tokens=-13, cost=0.0)}
INFO - tinypaper - Completed after 0:04:08
